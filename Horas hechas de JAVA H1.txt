Horas echas de JAVA: H1
                                     H1
                                     H1
                                     H1
                                     H1
                                     H1
-------------------------------------------
                                    H1
                                    H1
                                    H1
                                    H1
                                    H1
                                    H1
-------------------------------------------
                                    H1
                                    H1 
                                    H1
                                    H1 
                                    H1 
                                    H1
-------------------------------------------
                                    H1
                                    H1
                                    H1
-------------------------------------------
                                    H1
                                    H1 
                                    H1 
-------------------------------------------
                                    H1 
                                    H1 
                                    H1 
                                    H1 
                                    H1 
                                    H1
                                    H1
                                    Minútos+10
--------------------------------------------
                                    H1
                                    H1
                                    H1
                                    H1
                                    H1   
---------------------------------------------
                                    H1
                                    minutos+29 
---------------------------------------------
                                    H1 
                                    H1 
                                    H1 
                                    H1 
---------------------------------------------
                                 07/28/2025
                                    H1
---------------------------------------------
                                 07/29/2025
                                    H1 
                                    H1 
                                    H1 
                                    H1 
                                    Minutos+10
-----------------------------------------------
                                 07/30/2025
                                    H1 
                                    H1 
                                    Minutos+30
-----------------------------------------------
                                 08/01/2025
                                    H1  
                                    H1 
                                    H1 
                                    H1 
                                    Minutos+20
-----------------------------------------------
                                 08/02/2o25
                                    H1 
                                    H1 
                                    Minutos+30
-----------------------------------------------
                                 08/03/2025
                                    H1 
                                    H1 
                                    H1 
------------------------------------------------
                                 08/04/2025
                                    H1 
------------------------------------------------       
                                 08/05/2025
                                    H1 
------------------------------------------------  
                                 08/06/2025
                                    H1 
------------------------------------------------
                                 08/07/2025
                                    H1 
                                    Minutos+30
------------------------------------------------
????????????????????????????????????????????????
------------------------------------------------
                                 08/09/2025
                                    H1  
                                    H1 
                                    H1    
                                    H1           
------------------------------------------------
                                 08/10/2025
                                    H1 
                                    H1 
                                    H1 
------------------------------------------------
                                 08/11/2025
                                    H1 
                                    H1 
                                    H1        
 -----------------------------------------------
                                 08/21/2025
                                    H1
                                    H1 
------------------------------------------------     
                                 08/22/2025
                                    H1  


---------------------------------------------------------------------------------
Etiquetas faltantes: ...--<fieldset>--...
                      ...--<legend>--...
                     ...--<optgroup>--...
                     ...---<option>--...
                      ...--<button>--...
                     ...--<datalist>--...
                      ...--<output>--...
                     

---------------------------------------------------------------------------------
.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.

Logros: ¡Me aprendi al detalle la estructura basica de HTML!.

.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-..-.-.-.-.-.-.-.-.-.-.-..-.-.-.-.-.-.-.-.-.-.-.-.-.

Videos vistos: https://www.youtube.com/watch?                                                        
                       v=tEwLE3WmraA&ab_channel
                       =EDteam

Notas importantes: Con (alt + z) quita la barra                     
                                                     horizontal
                                Con (shif + alt + f) Formatea el          
                                                              codigo


Etiquecas ya utilizadas: H1 A H6
-------------------------------------------
                    párrafos <p> y saltos de 
                               línea <br>  
-------------------------------------------
                            "strong","em" y "u"


-. <strong>  Strong(fuerte)                Muestra el 
                                                             texto en
                                                             negrita y 
                                                             lo resalta


-. <em>       Emphasis(énfasis)         Muestra el 
                                                            texto en 
                                                           cursiva para
                                                           darle énfasis


-. <u>         Underline (subrayado)  Subraya el 
                                                          texto
-------------------------------------------
                              "div" y "span"
                       
¿Qué son "div" y "span"?

Ambas son etiquetas contenedoras. No hacen nada visible por sí mismas, pero agrupan y organizan contenido. Su verdadero poder aparece  cuando las usas con CSS o JavaScript.
...........................................
"div"       De bloque              Agrupar secciones 
                                             grandes                    
                                             (párrafos, imágenes,
                                             formularios, etc.) 

"span"   En línea (inline)    Agrupar pequeñas  
                                           partes dentro del texto 
                                           (palabras, frases)

...........................................

VS: DIFERENCIA PRINCIPAL

"div"                                                               

Elemento de bloque.

Se usa para secciones grandes.

Salta a la siguiente línea.

Se puede usar para dividir la página en 
"cajas" o "columnas".

IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII

"span"

Elemento en línea.

Se usa dentro de textos.

No interrumpe el flujo del texto.

Se usa para modificar palabras específicas.

...........................................

¿CUÁNDO USAR CADA UNO?


                                   "div"
 Agrupar  varios párrafos, imágenes, formularios... 

                                   
                                 "span"
       Dar estilo solo a una palabra  o frase.


                                 "div"
Crear secciones de una página (manú, pie de 
                      página, artículos).


                              "span" 
         Resaltar una palabra en un párrafo.    

-------------------------------------------

                              "img"

¿Qué es "img"?

La etiqueta "img" se utiliza para mostrar imágenes en una página HTML. Es una etiqueta vacía, lo que significa que no tiene contenido dentro dentro y no se cierra con </img>, solo se usa así:

<img src="ruta-de-la-imagen" alt="Texto alternativo">

...........................................

src = source = fuente de la imagen.

Es la ruta o dirección donde está la imagen.

<img src="foto.jpg"

...........................................

alt = texto alternativo

<img src="perfil.png" alt="foto de perfil">

...........................................

<h2>Mi foto de perfil</h2>
<img src="yo.jpg" alt="foto en blanco" width="200">

-------------------------------------------

                           Fecha: 7/17/2025


¿Qué es una lista?

Una lista es un conjunto de elementos (ítems) mostrados uno debajo del otro. HTML tiene dos tipos principales de listas:

<ol> - lista ordenada

. Muestra los elementos con números, letras o romanos.

.Se usa cuando el orden importa (pasos, rankings, instrucciones).

Ejemplo:

<ol>
    <li>Despertar</li>
    <li>Entrenar</li>
    <li>Desayunar</li>
</ol>

Se verá así:

1. Despertar.
2. Entrenar.
3. Desayunar.

Atributos de <ol>:

. type: cambia el estilo de numeración.

1                            1,2,3... (por defecto)
A                           A,B,C...
a                           a,b,c...
I                            I,II,III...
i                            i,ii,iii...

. start: define el número inicial.

<ol start="5">
    <li>Elemento</li>
    <li>Otro</li>
</ol>

...........................................

<ul> - Lista no ordenada

. Muestra los elementos con viñetas(puntos).
.Se usa cuando el orden no importa(características, compras, ideas).

Ejemplo:

<ul>
   <li>Manzana</li>
   <li>Banana</li>
   <li>Fresa</li>
</ul>

Se verá asi:

. Manzana
. Banana
. Fresa

Atributo de <ul>:

. type (solo en HTML antiguo, no recomendado ahora)

. disc (●) <- predeterminado
. circle (○)
. square (■)

Ejemplo (aunque se recomienda hacerlo con CSS hoy en día):

<ul type="square">
    <li>Elementos</li>
</ul>

...........................................

<li> - List Item (Elemento de Lista)

Se usa dentro de <ol> o <ul> para agregar un ítem:

<ul>
   <li>Uno</li>
   <li>Dos</li>
</ul>

No se puede usar <li> sin estar dentro de una lista.

-------------------------------------------

                                        "a"

<a href=""> - Enlaces en HTML

Sintaxis básica:

<a href="URL-del-enlace">Texto que se 
muestra</a>


<a>                         inicia el enlace (anchor = 
                              "ancla").

href=""                  "Hypertext REFerence", indica a 
                             dónde lleva el enlace.

Texto                    Es lo que el usuario ve y puede 
                             hacer clic.

</a>                      Cierra el enlace.


...........................................


Enlace que abre en una nueva pestaña:

<a href="https://youtube.com" target="_blank">Ir a 
             Youtube</a>

...........................................

¿Qué es "mailto:"?

Es un tipo de enlace especial que se usa para enviar correos electrónicos desde HTML.

¿Para qué sirve?

Cuando alguien hace clic en ese enlace, se abre el programa de correo predeterminado del usuario (como Gmail, Outlook, etc.), y ya con tu dirección escrita en el destinatario.

<a href="mailto:nombre@gmail.com">Enviar correo a la persona</a>

¿Qué es href?

href significa Hypertext Reference (referencia de hipervínculo).

Es un atributo del elemento <a> que le dice al navegador a dónde debe llevarte cuando haces clic en el enlace.

¿Qué es un id en HTML?

El atributo id sirve para darle un nombre único a cualquier elemento HTML.

Con ese nombre puedes:
. Vincular enlaces internos.
.Usar CSS o JavaScript para afectar ese elemnto específico (más adelante verás esto).

Ejemplo de uso de id:

<h2 id="fin">Gracias por leer</h2>

Y luego arriba puedes poner:

<a href="#fin"> Ir al final de la página</a>

mailto:                    Abrir el correo para enviar a     
                               una dirección específica

href                        Decir a dónde debe llevar el  
                               enlace

id                            Marcar un lugar en el 
                               documento para poder enlazar o 
                               identificarlo

-------------------------------------------

                            ."table", "tr", "td", "th".


"table"                    Crea la tabla
"tr"                       Fila de la tabla (table row)           
"td"                       Celda de datos (table data)
"th"                       celda de encabezado (table header)


.<table>

Es el contenedor principal. Todo lo que tenga que ver con la tabla va dentro de esta etiqueta.

<table>
    <!-- aquí dentro va todo lo demás -->
</table>

 
.<tr> - Table Row (Fila)

Cada <tr> representa una fila horizontal. Dentro de cada fila, se colocan celdas <td> o <th>.

<tr>
    <!-- aquí van celdas -->
</tr>


<td> - Table Data (celda de datos)

Representa una celda común, es decir, datos normales dentro de una fila.

<td>Jose</td>
<td>17 años</td>
<td>Calistenia</td>

<th> - Table Header (Encabezado)

Es como <td>, pero para los títulos o encabezados de la tabla. Se ve en negrita y centrado por defecto.

<th>Nombre</th>
<th>Edad</th>
<th>Pasatiempo</th>


<h2>Tabla de ejemplo</h2>

<table border="1"
  <tr>
    <th>Nombre</th>
    <th>Edad</th>
    <th>Pasatiempo</th>
  </tr>

  <tr>
    <td>Jose</td>
    <td>17</td>
    <td>Programar</td>
  </tr>

  <tr>
    <td>Angel</td>
    <td>17</td>
    <td>Calistenia</td>
  </tr>
</table>


-------------------------------------------

                   "header"


¿Para qué sirve <header>?

Un <header> se usa para incluir elementos como:

 . El título del sitio o sección.
 . Un logotipo.
 . Una barra de navegación (<nav>).
 . Un eslogan o mensaje de bienvenida.
 . Menús o enlaces importantes.
 
 ..........................................

¿Dónde se coloca? 

Puede usarse en dos niveles:

Global(Principal)       Al principio de la página.         Encima de todo en <body>
                        Representa la cabesera general. 


De sección              Dentro de una <section>,           Como cabera de una sección
                        <article>, etc.                      


...........................................

¿Qué puede contener <header>?

Dentro de <header > puedes poner casi cualquier elemento como:

. <h1> a <h6> -> títulos
. <img> -> Logos o imágenes
. <p> -> Frases o eslóganes
. <button> -> Botones de llamada a la accíon (como "Iniciar sesión")

...........................................

¿Qué NO debe ir dentro de <header>?

. Contenido principal de la página (ese va en <main>).
. Artículos completos.
. Formularios largos o secciones independientes.

...........................................

¿Por qué es útil usar <header> correctamente?

. Mejora el SEO (los motores de búsqueda entienden mejor tu estructua).
. Mejora la accesibilidad (lectores de pantalla leen con más claridad).
. Hace tu código más organizado y profesional.

-------------------------------------------


                            "nav"

¿Qué es <nav>?

La etiqueta <nav> en HTML5 es una etiqueta semántica que se usa
para agrupar enlaces de navegación importantes en una página web.
Es decir, sirve para contener el menú o los botones/enlaces que
permiten al usuario moverse entre las secciones del sitio.

...........................................

¿Cómo se usa?

<nav>
 <ul>
  <li><a href="#inicio">Inicio</a></li>
  <li><a href="#servicios">Servicios</a></li>
  <li><a href="#contacto">Contacto</a></li>
 </ul>
</nav>

........................................... 


¿Qué puede contener <nav>?
La etiqueta <nav> puede contener:

. <a> -> Enlaces (¡lo más común!).
. <ul> o <ol> -> Listas para organizar los enlaces.
. <button> -> Botones (si estás creando un menú interactivo).
. <div> o <span> si vas a usar estilos o clases.

...........................................

¿Cuándo debes usar <nav>?

Usa <nav> solo para navegación principal o importante, por ejemplo:

. El menú principal de tu página (arriba del todo).
. Menú lateral o de secciones (sidebar).
. Navegación entre artículos, productos, perfiles, etc.

X No uses <nav> para enlaces sueltos no relacionados con navegación

-------------------------------------------


                         "main"



¿Qué es?                          Contenedor del contenido principal de una página.

¿Para qué sirve?                  Para definir lo más importante de la página.

¿Cuántas veces usar?              Solo una vez por documento HTML.

¿Dónde se coloca?                 Después del <header> y fuera del <nav> <footer>, etc.

¿Qué puede contener?              <section>, <article>, <div>, texto, imágenes, formularios, etc.

¿Por qué usarlo?                  Mejora la accesibilidad, el SEO y la organización de tu sitio.


-------------------------------------------

                     "article"


¿Para qué sirve <article>?

Sirve para identificar una unidad completa de contenido.

Una publicación de blog                   Sí

Una noticia en un periódico               Sí

Un comentario de usuario                  Sí

Un producto en una tienda onlin           Sí

un bloque de texto suelto                 X No necesariamente


...........................................



¿Como funciona?

La etiqueta <article> se usa para encerrar contenido autónomo.
Internamente, puedes colocarle lo que quieras:
títulos, imágenes, texto, listas, videos, etc.
Y sí, también puedes poner artículos dentro de otros artículos, si uno depende del otro 
(como un comentario dentro de un post principal).

...........................................


Estructura básica de <article>:

<article>
  <h2>Título del artículo</h2>
  <p>Contenido independiendte que tiene sentido por sí mismo.</p>
</article>

...........................................

¿Cuándo usar <article> y cuándo no?

Usa <article> cuando:

El contenido puede republicarse o verse de forma aislada y seguir teniendo sentido.

El contenido representa una entrada o pieza individual dentro de un conjunto mayor.

No uses <article> cuando:

El texto forma parte del cuerpo general de la página (usa <section> o solo <p>).

Es contenido auxiliar, dexorativo o dependiente (usa <aside>, <div>, etc).

...........................................

¿Que puede ir dentro de <article>?

. <h1> a <h6> -> título del artículo
. <p> -> párrafos
. <img> -> imágenes
. <ul> / <ol> -> listas
. <footer> -> para autor, fecha, enlaces
. <section> -> si el artículo tiene partes internas
. Otro <article> -> Si hay artículos relacionados o comentarios

-------------------------------------------

                   "section"

¿Qué es <section>?

La etiqueta <section> se usa para agrupar contenido relacionado dentro de una página web.
Es una etiqueta semántica, como <article> o <header>, que indica una sección independiente del documento

...........................................

¿Para qué sirve?

Sirve para dividir tu contenido en bloques temáticos. Imagina que tienes una  sola página con muchas partes distintas (como un blog, una guía, o una landing page).
Cada parte que tenga su propio propósito puede ur dentro de un <section>.

...........................................

¿Cómo funciona?

. Debe tener un título propio, usando <h2>, <h3>, etc.

. Va dentro del <main>, de un <article>, o incluso por sí sola si tiene sentido.

...........................................


¿Cuándo usar <section>?

úsalo si...                                   X No lo uses si...

Agrupas  contenido con un título claro        Solo estás agrupando estilos 
                                              visuales

La sección tiene sentido por sí sola          El contenido no tiene relación 
                                              temática

Está en el <main>, <article> o <aside>        Es solo un <div> para diseño visual


............................................


Ejemplo práctico:

<main>
  <section>
    <h2>Beneficios de hacer ejercicio</h2>
    <p>Hacer ejercicio regularmente mejora la salud física y mental.</p>
</section>

<section>
  <h2>Consejos para empezar</h2>
  <p>Comienza con caminatas diarias y aumenta la intensidad progresivamente.
</section>
</main>


.............................................


¿En qué se diferencia de <article>?

<section>                                <article>

Parte de un todo                         Puede vivir por sí mismo (como un post)

Agrupa contenido con un título           Es un contenido completo (como una 
                                         reseña)

Necesita más contexto para tener         Tiene sentido incluso fuera del sitio
sentido


-----------------------------------------------


                         ""footer"


¿Qué es <footer>?

La etiqueta <footer> representa el pie de página de una sección o de todo el documento HTML Contiene información relacionada con la parte que la rodea, como:

. Autor del contenido
. Derechos de autor
. Enlaces de contacto 
. Enlaces relacionados
. Información legal o enlaces al aviso de privacidad

...................................................

¿Para qué sirve?

Sirve para mostrar información final o complementaria en un sitio web o dentro de una sección específica. Es importante porque:

. Mejora la estructura semántica del HTML
. Facilita la accesibilidad para los lectores y los motores de búsqueda
. Agrupa contenido que no forma parte del cuerpo principal, pero es útil 

....................................................

¿Cómo funciona?

Puedes colocar un <footer> al final del documento, o dentro de secciones, artículos, aside, etc.. Su contenido es flexible: puedes incluir texto, enlaces, imágenes, íconos, etc.

......................................................

Ejemplo práctico:

<footer>
  <p>© 2025 Jose Angel Lombana. Todos los derechos reservados.</p>
  <p>Contacto: joseangel@gmail.com</p>
<footer>

-------------------------------------------------------


                         "class"

¿Para qué sirve?

. Aplicar estilos CSS fácilmente:
  Puedes decir: "Todos los elementos que tengan la clase rojo serán de color rojo."

. Reutilizar estilos:
  En lugar de repetir el mismo estilo una y otra vez, le das a varios elementos la misma clase.

. Identificar elementos en JavaScript:
  Puedes seleccionar todos los elementos con la misma clase y hacer algo con ellos (como ocultarlos, cambiarles el texto, etc).

.........................................................


¿Cómo funciona?

Sintaxis general:

<tag class=nombre-de-clase">Contenido</tag>

Se pueden poner varias clases separadas por espacios:

<tag class="clase1 clase2 clase3">Contenido</tag>

Ejemplo:

<p class="advertencia">Este párrafo muestra un mensaje de advertencia.</p>

En CSS:

.advertencia {
  color: red;
}

.exito {
  color: green;
}


............................................................


Diferencia entre class e id:

Atributo           Usado para              Se puede repetir

class              Agrupar elementos       Sí
                   similares

id                 Identificar un          No (solo uno por 
                   elemento único              página)
                  
------------------------------------------------------------

                               "id"

¿Qué es el atributo id?

El atributo "id" en HTML sirve para identificar de forma única un solo elemento en una página. A diferencia de class, que puede repetirse en varios elementos, un "id" debe ser único: no puede haber dos elementos con el mismo "id" en la misma página.

.............................................................

¿Para qué sirve id?

. Identificar un elemento para CSS o JavaScript
  Aunque no estás usando CSS ni JavaScript todavía, es útil saber que el "id" permite aplicar estilos o hacer interacciones específicas con ese elemento en el futuro.

. Navegación interna (anclas)
  Puedes usar "id" para crear enlaces dentro de la misma página que te lleven a una parte específica (esto se llama navegación  de anclas).

. Organizació  y estructua
  A veces se usa "id" solo para identificar visualmente un elemento con propósitos
  semánticos o para referencia en programación.

...............................................................

¿Cómo se usa "id"?

El atributo se escribe así dentro de una etiqueta HTML:

<p id="introduccion">Este párrafo tiene un id llamado "introduccion".</p>

..................................................................

Ejemplo con navegación interna (anclas)

<a href="#seccion2">Ir a la sección 2</a>

<h2 id="seccion2">sección 2</h2>
<p>Este es el contenido de la sección 2.</p>

...................................................................

Reglas importantes.

. El valor del "id" no puede empezar por un número (de preferencia).
. Solo puedes usar un "id" por elemento.
. No se repiten "id" en un mismo documento HTML.
. Es sensible a mayúsculas y minúsculas.

----------------------------------------------------------------------

¿Qué significa "formatos de texto adicionales?

Son etiquetas que se usan para dar contexto o formato especial a ciertos fragmentos de texto como:

. Citas textuales
. Fragmentos de código
. Abreviaciones
. Definiciones, etc.


Etiquetas incluidas en ese tema:

1: <blockquote> - Citas largas

Sirve para citar textos largos o párrafos de otra fuente.
Se suele usar con sangría visual.

#Ejemplo:

<blockquote>
  La educación es el arma más poderosa que puedes usar para cambiar el mundo.
</blockquote>

.......................................................................

2: <q> - Citas cortas (entre comillas)

Para frases o palabras de alguien más, dentro de un párrafo.

#Ejemplo:

<p>Mi mamá siempre decía: <q>El respeto es la base de todo.</q></p>

.......................................................................

3: <code> - Código de programación

Muestra un texto como si fuera código.
Útil si hablas sobre comandos o fragmentos de HTML, CSS, etc.

#Ejemplo:

<p>Para crear un título, usa <code>&lt;h1&gt;</code>.</p>

.........................................................................

4: <abbr> - Abreviaturas

Define una abreviatura.Al pasar el curso por encima, muestra el significado completo.

#Ejemplo:

<p>Estudio en el <abbr title="servicio Nacional de aprendizaje">SENA</abbr>.</p>

..........................................................................

5: <cite> - Citas de obras o autores

Se usa  para nombrar el título de un libro, película, cnación o autor.

#Ejemplo:

<p><cite>El principito</cite> es una obra clásica de Antoine de Saint-Exupéry.</p>

............................................................................

6: <dfn> - Definiciones

Marca una palabra que estás definiendo.

#Ejemplo:

<p><dfn>HTML</dfn> es el lenguaje que usamos para estructurar páginas web.</p>

.............................................................................

                            
                                <blockquote>

¿Qué es <blockquote>?

La etiqueta <blockquote> se usa para citas textuales largas que provienen de otra fuente. Es decir, cuando copias un fragmento de texto de un libro, artículo,sitio web, etc., y quieres mostrarlo con claridad y respeto por su origen, se encierra dentro de <blockquote>

# HTML interpreta esta etiqueta como una cita independiente
# Visualmente, el navegador le da sangría (espacio hacia adentro) para diferenciarla del resto del texto.

-------------------------------------------------------------------------------

                                    <q>


¿Qué es <q>?

La etiqueta <q> se usa para citas breves dentro de un párrafo. A diferencia de <blockquote>, que se usa para citas largas y separadas, <q> es inline (va dentro del texto) y automáticamente coloca comillas.

---------------------------------------------------------------------------------

                                 <code>                  


¿Qué hace <code>?

La etiqueta <code> muestra texto con estilo monoespaciado, ideal para comandos,
funciones o fragmentos de código en cualquier lenguaje (HTML, JavaScript, python, etc.)

----------------------------------------------------------------------------------


                                  <abbr>


<¿Cómo funciona <abbr>?

La etiqueta <abbr> permite escribir abreviaciones (como "HTML","ONU","NASA","CEO",etc.) y mostrar su significado completo cuando el usuario pasa el mouse por encima. Se usa así:

<abbr title="HyperText Markup Language">HTML</abrr>

----------------------------------------------------------------------------------

                                  <cite>

Esta etiqueta se usa para citar el título de una obra, como un libro,una peícula, una canción, un artículo, etc. No se usa para citar personas o frases, sino el nombre de una fuente creativa o intelectual.

¿Cómo se usa?

Se coloca el títuo de la obra dentro de la etiqueta <cite> para indicar que es el nombre de algo que ha sido creado (una bra):

<cite>Cien años de soledad</cite>

En un contexto, podrías escribir algo como:
"El libro <cite>Cien años de soledad</cite> fue escrito por Gabriel García Márquez."
 
----------------------------------------------------------------------------------

                                   <dfn>

Que se utiliza para marcar la primera aparición o definición de un término en un texto. Al combinarla con el atributo "title", también se puede mostrar el significado al pasar el cursor por encima (esto es útil si luego aplicas CSS o JavaScript, aunque por ahora solo usarás HTML).

¿Cómo se usa <dfn>?

<dfn title="HyperText Markup Language">HTML</dfn> es el lenguaje con el que se crean las páginas web.

En este ejemplo, estás definiendo el término HTML y su significado está en el atributo "title".

----------------------------------------------------------------------------------

                                    <b>

¿Qué es la etiqueta <b>?

La etiqueta <b> sirve para resaltar texto en negrita, pero sin darle un énfasis especial o importancia semántica. Es decir, solo cambia la apariencia visual del texto, no su significado.

Ejemplo:

<p>Este es un <b>texto en negrita</b> que solo se ve màs fuerte visualmente.</p>

¿Cuándo usar <b>?

. Quieres resaltar palabra o frases visualmente.
. No deseas decir que son importantes o urgentes (solo destacarlas por diseño).
. No estás indicando una advertencia ni una definición.

¿Cómo se usa?

<b>Texto que quiero en negrita</b>

Puedes usarlo dentro de párrafos, listas, encabezados, etc.

---------------------------------------------------------------------------------


                                      "i"

¿Qué es <i>?

La etiqueta <i> se usa para dar énfasis o resaltar palabras o frases, generalmente con cursiva, pero no necesariamente por importancia (eso sería <em>). Se utiliza en:

. Palabras extranjeras
. Pensamientos 
. Términos técnicos
. Nombres de obras
. Diálogos o expresiones

---------------------------------------------------------------------------------

                                    "mark"

La etiqueta <mark> sirve para resaltar un fragmento de texto, como si lo subrayaras con un marcador amarillo. Se usa mucho para destacar información importante en un párrafo.

---------------------------------------------------------------------------------

                                    "small"

¿Para qué sirve <small>?

Se utiliza para mostrar texto más pequeño, generalmente para notas al pie, aclaraciones o detalles secundarios dentro de un párrafo

---------------------------------------------------------------------------------

                                     "del"

La etiqueta <del> sirve para indicar que un texto ha sido eliminado o ya no es válido, generalmente se muestra tachado. Es muy útil en:

. Listas de precios (mostrar precio anterior).
. Correcciones (mostrar texto eliminado).
. Documentos donde se registran cambios.

---------------------------------------------------------------------------------

                                      "ins"

. Se usa cuando quieres resaltar que algo es nuevo, que ha sido agregado depués o que cambia respecto a una versión anterior.

. Normalmente se muestra subrayando por defecto en los navegadores (aunque puedes cambiar su estilo con CSS).

---------------------------------------------------------------------------------

                                       "sub"

¿Para qué sirve <sub>?

La etiqueta <sub> se usa para mostrar texto en subíndice, es decir, más pequeño y ligeramente más abajo que el texto normal. Se utiliza mucho para:

. Fórmulas químicas
. Expresiones matemáticas
. Notas al pie o aclaraciones pequeñas

---------------------------------------------------------------------------------

                                        "sup"

La etiqueta <sup> Sirve para mostrar texto en superíndice, es decir, más pequeño y elevado. Es útil para:

. Potencias en matemáticas.
. Notas al pie.
. Unidades científicas.

---------------------------------------------------------------------------------


                                   "address"


Sirve para mostrar información de contacto relacionada con el autor de un documento, un artículo, una empresa o una persona.

¿Para qué se usa?

. Para indicar direcciones físicas (calles, ciudades, etc.)
. Para mostrar correos electrónicos o teléfonos.
. Para dar información de contacto del autor de una página o sección.
. Se utiliza normalmente en pies de página (footers) o al final de artículos,   
  pero puede ir en cualquier parte donde se dé contacto.

.................................................................................

Características importantes:

- Semánticamente, los navegadores y buscadores saben que es información de contacto, lo que ayuda al SEO.

- No solo sirve para direcciones físicas, también puede contener emails, enlaces, teléfonos, redes sociales.

- El texto dentro de <address> normalmente se muestra en cursiva por defecto, pero se puede cambiar con CSS.

---------------------------------------------------------------------------------

                                     "bdo"

Significa Bi-Directional Override (anulación bidireccional).
Sirve para cambiar la dirección del texto dentro del navegador, sin importar el idioma predeterminado de la página.

.................................................................................

¿Para qué se usa?

- Para mostrar texto de derecha a izquierda (como el árabe o hebreo).
- Para cambiar el orden de un texto por efectos visuales o de estilo.

.................................................................................

Sintaxis básica:

<bdo dir="rtl">Texto al revés</bdo>
. dir="rtl" -> Right To Left (de derecha a izquierda).
. dir="ltr" -> Left To Right (de izquierda a derecha, es el normal).

---------------------------------------------------------------------------------

                             "Colores HTML RGB y RGBA"

- Un valor de color RGB representa fuentes de luz ROJA, VERDE y AZUL.
 
- Un valor de color RGBA es una extensión de RGB con un canal alfa (opacisas).

.................................................................................

En HTML, un color se puede especificar como un valor RGB, utilizando esta fórmula:

rgb( rojo, verde, azul )

---------------------------------------------------------------------------------


                              "Colores HEX HTML"

. Un color hexadecimal se especifica con: #RRGGBB, donde los números enteros hexadecimales RR (rojo), GG (verde) y BB (azul) especifican los componentes del color.

---------------------------------------------------------------------------------

                               "Colores HTML HSL y HSLA"

. HSL significa tono, saturación y luminosidad.
  Los valores de color HSLA son una extensión de HSL con un canal alfa (opacidad).

Valores de color HSL.

En HTML, un color se puede especificar utilizando tono, saturación y luminosidad (HSL) en la forma:

hsl( tono , saturación , Luminosidad )

---------------------------------------------------------------------------------

                                      "map"

¿Cómo funciona?

- Se necesita una imagen: usas la etiqueta <img> como siempre.
- Relacionas la imagen con un mapa: al <img> le pones el atributo 
  usemap="#nombreMapa"
- Creas el <map>: este contendrá áreas (<area>) que serán los "botones 
  invisibles".
- Defines las áreas: dentro del <map> usas <area> para especificar qué partes de 
  la imagen son clicables.
.................................................................................

Estructura básica

<img src="imagen.jpg" usemap="#mimapa">

<map name="mimapa">
  <area shape="rect" coords="34,44,270,350" href="pagina1.html" alt="zona 1">
  <area shape="circle" coords="337,300,44" href="pagin2.html" alt="zone 2">
  <area shape="poly" coords="130,136,200,180,220,300" href="pagina3.html" alt="Zona 3">

.................................................................................

Atributos importantes de <area>

. shape: forma del área clicable.
  . rect -> rectángulo.
  . circle -> círculo.
  . poly -> polígono (varios puntos).
. coords: las coordenadas (en píxeles) sque delimitan el área.
  . Rect: x1, y1, x2, y2 (esquina superior izq. y esquina infeior der.).
  . Círculo: xCentro,yCentro,radio.
  .Polígono: pares de x,y para cada vértice.
. href: enlace al que lleva el área.
.alt: texto alternativo (muy importante para accesibilidad).

---------------------------------------------------------------------------------

                               "picture"

Brinda a los desarrolladores web más flexibilidad para especificar recursos de imágenes.

El <picture> elemento contiene uno o más <source> elementos, cada uno de los cuales hace referencia a diferentes imágenes mediante el "source"

atributo. De esta forma, el navegador puede elegir la imagen que mejor se adapte a la vista o dispositivo actual.

Cada <source> elemento tiene un media atributo que define cuándo la imagen es más adecuada.

---------------------------------------------------------------------------------

                                "Favicon"

Una imagen de favicon se muestra a la izquierda del título de la página en la pestaña del navegador, de la siguiente manera:

Para añadir un favicon a tu sitio web, guarda la imagen en el directorio raíz de tu servidor web o crea una carpeta en el directorio raíz llamada  "images" y guárdala allí. Un nombre común para una imagen de favicon es "favicon.ico"

---------------------------------------------------------------------------------

                                 "Title"

Cada página web debe tener un título para describir el significado de la página.

---------------------------------------------------------------------------------

                                 "dl, dt, dd"

¿Qué son?


- <dl> (Description List):
  Es el contenedor que guarda una lista de descripciones.
  Se traduce como "lista de definiciones" o "lista descriptiva".

- <dt> (Definition term):
  Es el término o elemento que vas a describir.
  (Ejemplo: una palabra, un concepto, un producto).

- <dd> (Definition Description):
  Es la descripción o explicación de ese término.
  (Ejemplo: el significado, detalles o características).

.................................................................................

¿Para qué sirven?

. Para hacer listas de conceptos con sus descripciones, como:
 . Glosarios (palabra + significado).
 . Preguntas y respuestas (FAQ).
 . Productos (nombre + detalle).
 . Horarios (actividad + hora).

.................................................................................

Nota: Son más semánticas que usar <ul> (listas normales), porque el navegador entiende que es un término con su explicación.

.................................................................................

¿Como se usan?

<dl>       <!-- Abre la lista descriptiva -->
  <dt>Termino 1</dt>    <!-- El término o palabra -->
  <dd>Descripción del término 1</dd>   <!-- Explicación -->

  <dt>Termino 2</dt>
  <dd>Descripción del término 2</dd>
</dl>

---------------------------------------------------------------------------------

                                    "iframe"

¿Qué es <iframe>?

Un iframe (Inline Frame) es una etiqueta HTML que sirve para incrustar contenido de otra página web dentro de la tuya, como si fuera una "ventana" que muestra otro sitio, documento o recurso.

.................................................................................

¿Para qué sirve?

 . Insertar videos
 . Mostrar mapas interactivos
 . Incluir otros sitios web o páginas propias
 . Mostrar documentos (PDF, formularios, presentaciones).

.................................................................................

Sintaxis básica:

<iframe src="URL" width="600" height="400"></iframe>

---------------------------------------------------------------------------------

                                "HTML JavaScript"

<script> Se utiliza  para definir un script del lado del clíente (JavaScript).

Para seleccionar un elemento HTML, JavaScript suele utilizar el document.getElementById() método.

<script>
document.getElementById("demo").innerHTML = "Hello JavaScript!";
</script>

---------------------------------------------------------------------------------

                                "¿Qué es <aside>"

La etiqueta <aside> es un elemento semántico de HTML5.
Se usa para contenido relacionado con el contenido principal de la página, pero que no es parte esencial de él.

Sirve para mostrar información complementaria: anuncios, barras laterales, datos extra, enlaces relacionados, etc.

.................................................................................

¿Dónde se usa?

Generalmente va fuera o al  costado del contenido principal (<main> o <article>).
Pero también puede ir dentro de un artículo, si la información complementa solo ese artículo.

.................................................................................

¿Para qué sirve?

. Mostrar barras laterales (sidebar).
. Poner publicidad.
. Incluir notas adicionales, citas, referencias.
. Mostrar enlaces relacionados (Por ejemplo: "Artículos recomendados").
. Poner datos del autor o biografías cortas.

.................................................................................

¿Qué No es <aside>?

. No es para contenido principal
. No es obligatorio ponerlo siempre
. No tiene un estilo visual propio, solo le da significado semántico (el diseño 
  lo haces con CSS)

.................................................................................

¿Dónde lo colocamos?

- Dentro de <article>: si complementa ese artículo en particular.
- Fuera del <main>: Si es contenido adicional de toda la página (ejemplo: una 
  barra lateral).

---------------------------------------------------------------------------------

                                    "base"

¿Qué es <base>?

La etiqueta <base> en HTML sirve para definir una URL base y/o un destino por defecto para todos los enlaces (<a>) y recursos (como imágenes, scripts, etc.) que no tengan una URL completa.

Importante: 
   . Siempre va dentro de <head> (nunca en <body>).
   . Solo puede haber una etiqueta <base> por documento (si pones más, el navegador solo toma la primera).

.................................................................................

¿Para qué sirve?

. Definir la URL base:
  Si escribes muchos enlaces relativos en una página, puedes poner una base común para que no tengas que repetir la URL completa en cada uno.

. Definir el destino por defecto de los enlaces:
  Con el atributo traget puedes hacer que todos los enlaces se abran, por ejemplo, en una nueva pestaña (_blank) o en el mismo marco (_self).

  -------------------------------------------------------------------------------

                                  "details"

¿Qué es <details>?

Es una etiqueta HTML interactiva que crea una sección que el usuario puede expandir  o contraer (abrir/cerrar).
Por defecto, aparece como un "menú desplegable" que el usuario puede abrir haciendo clic.

.................................................................................

¿Cómo funciona?

Dentro de <details>, puedes poner cualquier contenido (texto, imágenes, listas, párrafos, etc.).
Para el título visible (el que aparece antes de deplegar), se usa la etiqueta <summary>.

.................................................................................

Atributos importantes.

"open": Hace que el detalle esté abierto por defecto.

<details open></details>
---------------------------------------------------------------------------------

                                      "summary"

¿Qué es <summary>?

. Es una etiqeuta HTML que define el título o encabezado visible de un bloque   
  <details>.
. Es el texto que aparece siempre visible y que el usuario puede hacer clic para 
  desplegar o contraer el contenido.
. Siempre debe ir dentro de <details> (si no, no funciona como debería).

.................................................................................

Ejemplo básico:

<details>
  <summary>Haz clic aquí para ver más</summary>
  <p>Este es el contenido oculto que se muestra al hacer clic.</p>
</details>

.................................................................................

¿Cómo funciona?

. Por defecto, el <details> está cerrado (contenido oculto).
. Cuando el usuario hace clic en <summary>, el bloque se despliega mostrando el 
  contenido adicional.
. Si quieres que aparezca abierto desde el inicio, añades el atributo "open" al 
  <details>.

.................................................................................

Reglas importantes:

- Debe haber solo un <summary> por cada <details>.
  Si pones más de uno, es inválido.
- El <summary> debe ser el primer hijo de <details>.
  Si lo colocas después del contenido, no funciona correctamente.
- Puedes poner texto, imágenes o incluso otros elementos dentro del <summary>.

---------------------------------------------------------------------------------


                                   "kbd"

¿Qué es <kbd>?

. <kbd> significa Keyboard (teclsdo).
. Se usa para representar entradas del usuario, normalmente teclas que debe 
  presionar o comandos que se escriben.
. Sirve para indeicar, por ejemplo: "Presiona CTRL + S" o "Escribe npm indtall".

.................................................................................

Ejemplo básico:

<p>Para guardar  el archivo, presiona <kbd>ctrl</kbd> + <kbd>S</kbd>.</p>

.................................................................................

¿Qué hace exactamente?

- No ejecuta nada, solo marca el texto como una entrada del teclado.
- Visualmente, el navegador apllica un estilo monoespaciado (tipo de letra como 
  si fuera código).
- El objetivo es semántico: ayuda a entender que es una acción del usuario (y mejora la accesibilidad).

---------------------------------------------------------------------------------

                                     "samp"

¿Qué es <samp>?

- Significado: Viene de sample output (salida de ejemplo).
- Función: Se usa para representar texto que muestra la salida de un programa, 
  sistema o comando.
- Propósito: Indicar claramente al lector que el contenido no es texto normal, sino el resultado que devolvería un sistema (Por ejemplo:"Acceso denegado", "Error 404", etc).

.................................................................................

¿Cómo se ve?

Por defecto, el texto dentro de <samp> se muestra en fuente monoespaciada (similar a <code> y <kbd>), porque así se diferencia de un texto común.

Ejemplo:

<p>El sistema devolvió: <samp>Acceso denegado</samp></p>

.................................................................................

¿Cuándo usarlo?

. Para mostrar mensajes que el sistema muestra al usuario (errores, 
  confirmaciones, salidas de programas).
. En tutoriales donde muestras qué devuelve un comando.
. Al documentar interfaces o ejemplos de resultados de código.

.................................................................................

Diferencia con otras etiquetas parecidas:

- <code>: Es para escribir fragmentos de código (lo que tú escribes).
- <kbd>: Es para lo que el usuario escribe o presiona (teclas/comandos).
- <samp>: Es para lo que el sistema responde (salida o mensaje).

.................................................................................

Características clave:

. Es semántica: Describe el significado del texto, no solo el estilo.
. Accesible: Los lectores de pantalla entienden que es salida de un sistema.
. No tiene atributos especiales: Solo se estiliza con CSS si quieres 
  personalizarlo.

---------------------------------------------------------------------------------

                                      "pre"

¿Qué es <pre>?

. Nombre: viene de "preformatted" (preformateado).
. Función: Sirve para mostrar texto exactamente como lo escribes en el código, 
  respetando los saltos de línea, espacios y tabulaciones.
. Visual: El navegador muestra el contenido con fuente monoespaciada (como en 
  consola o editores de código).
. Comportamiento:
    . No colapsa los espacios múltiples  (como sí hace un párrafo normal).
    . Todo lo que escribas dentro aparece tal cual en pantalla.

.................................................................................

Características importantes:

- Mantiene el formato original
- Usa fuente monoespaciada
- Combinación frecuente
- No es editable

---------------------------------------------------------------------------------

                                     "var"


¿Qué es <var>?

La etiqueta <var> en HTML se usa para representar una variable - Puede ser una variable matemática, un nombre de variable en programación o incluso un parámetro en un texto técnico.

.................................................................................

Diferencia con otras etiquetas 

- <code>: representa fragmentos de código completo (ej. console.log() ).
- <samp>: muestra ejemplos de salida (lo que devuelve el sistema).
- <var>: específicamente para variables o parámetros.

Ejemplo combinando:

El valor de <var>X</var> en el código <code>console.log(<var>X</var>);</code> es mostrado como <samp>5</samp>.

---------------------------------------------------------------------------------

                                      "figure"

. ¿Qué es?
  Es un contenedor semántico para contenido realacionado con medios: imágenes, gráficos, tablas, fragmentos de código, etc.

. ¿Para qué sirve?
  Para agrupar contenido visual o independiente que puede ser referenciado o explicado con un pie de figura.

. Dato clave: Un <figure> puede ir con o sin <figcaption>. Sirve para darle 
  contexto a una imagen, gráfico o bloque visual.

---------------------------------------------------------------------------------

                                    "figcaption"

. ¿Qué es?
  Es el pie de figura (una descripción o título) que acompaña al contenido dentro de <figure>.

. ¿Para qué sirve?
  Para explicar lo que muestra la imagen, gráfico, diagrama o cualquier contenido
  dentro de <figure>.

. Dónde va: Siempre dentro de <figure>, y puede ir antes o después del contenido.

---------------------------------------------------------------------------------

                                       "time"

¿Qué es <time>?

La etiqueta <time> sirve para marcar fechas u horas en HTML.
No solo muestra el texto, sino que también incluye un atributo especial (datetime) que guarda el valor de la fecha/hora en un formato que las máquinas (navegadores, buscadores, apps) pueden entender.

Esto lo hace muy útil para:

. Mostrar fechas legibles para humanos (por ejemplo: "3 de agosto de 2025")
. Que las máquinas entiendan la fecha (por ejemplo: "2025-08-03"), mejorando el
  SEO y accesibilidad.

.................................................................................

Estructura básica.

<time datetime="AAAA-MM-DD">Texto visible</time>

. datetime: Aquí se pone la fecha/hora en formato estándar (ISO 8601).
. Texto visible: Es lo que el usuario ve (puede ser una fecha u hora en formato amigable).

.................................................................................

Formatos que acepta datetime:

- Fechas completa: YYYY-MM-DD -> 2025-08-03
- Hora: HH:MM -> 14:30
- Fecha y hora: YYYY-MM-DDTHH:MM -> 2025-08-03T14:30
- Solo mes y año: YYYY-MM -> 2025-08
- Solo año: YYYY -> 2025
- Duraciones: Con "P" para periodos -> P3D (3 días), P1Y2M(1 año y 2 meses).

---------------------------------------------------------------------------------

                               "Entidades HTML"

Los caracteres reservados en HTML deben reemplazarse con entidades:

. < (menor que) = <
. > (mayor que) = >

Entidades de caracteres HTML.

Algunos caracteres están reservados en HTML.

Si utiliza los signos menor que (<) o mayor que (>) en su texto HTML, el navegador podría mezclarlos con etiquetas.

Los nombres de las entidades se ven así:

&entity_name;

Los números de entidad se ven así:

&#entity_number;

Para mostrar un signo menor que (<) debemos escribir: < o <

---------------------------------------------------------------------------------

                                    "form"


¿Qué es <form>?

. <form> es una etiqueta contenedora que sirve para agrupar campos e inputs 
  (como textos, botones, selecciones, etc.) que el usuario puede llenar y enviar.

. Es el puente entre el usuario y el servidor: los datos que el usuario ingresa en un formulario pueden ser enviados para procesarse (por ejemplo, en un registro, un login, una búsqueda...).

"Es la estructura que usamos para crear formularios en la web."

.................................................................................

Estructura básica

Un formulario suele tener esta forma:

<form action="URL" method="método">
  <!-- Aquí van los inputs, botones, etc. -->
</form>

.................................................................................

Atributos principales:

- action
    . Define a dónde van los datos cuando el usuario envía el formulario.
    . Ejemplo:
        . action="procesar.Php" -> los datos se envían a un archivo PHP.
        . action="https://api.ejemplo.com/guardar" -> los datos se envían a una 
          API.
    . Si se deja vacío (action=""), los datos se envían a la misma página.
- method
    . Define cómo se envían los datos.
    . Valores principales:
       . GET: Los datos se envían en la URL (por ejemplo: pagina.com? 
         nombre=Jose&edad=20).
           . Se usa para formularios de búsqueda o cuando la información no es 
             sensible.
       . POST: Los datos se envían de manera interna (no visibles en la URL).
           . Se usa para formularios con información privada (registro, login, 
             etc.).
    . Por defecto, si  no lo pones, será GET.

¿Dónde se define?

En el formulario, con el atributo method:

<form action="procesar-php" method="GET">

O 

<form action="procesar.php" method="POST">

¿Cómo saber cuál usar?

. Si es solo para leer datos (ej. búsquedas) -> GET.
. Si es para enviar o guardar información (ej. registro, login) -> POST.

- Otros atributos útiles:
    . enctype: Tipo de codificación (por ejemplo, multipart/form-data si vas a 
      subir archivos).
    . autocomplete: permite o desactiva autocompletado (on / off).
    . target: Dónde se abrirá la respuesta (ej. _blank para nueva pestaña).

.................................................................................

Elementos que suelen ir dentro

Dentro de <form> colocamos los elemnetos del formulario:

  . Campos de texto: <input type="text">, <textarea>.
  . Botones: <button>, <input type="submit">.
  . Selecciones: <select>, <option>, <checkbox>, <radio>.
  . Etiquetas: <label> para describir cada campo.

.................................................................................

Inputs básicos que casi siempre usas.

- Texto: <input type="text">
- Correo: <input type="email">
- Contraseña: <input type="password">
- Número: <input type="number">
- Archivo: <input type="file">
- Opciones únicas: <input type="radio">
- Opciones múltiples: <input type="checkbox">

Botones importantes:

. <button type="submit"> -> envía el formulario.
. <button type="reset"> -> borra lo que hayas escrito.


.................................................................................

Etiquetas dentro de <form>:

¿Qué es <label>?

Es una etiqueta que sirve para describir un campo de formulario.
En otras palabras, le pone un nombre o descripción a un input (Como una caja de texto, un checkbox, etc.) para que el usuario sepa qué debe escribir o seleccionar.

Ejemplo en palabras:

- Si tienes un input para el correo, el <label> sería algo como "Escribe tu 
  correo:".

.................................................................................

¿Cómo funciona?

La gracia de <label> es que se asocia con un <input>.
Esto se hace con el atributo for, que debe coincidir con el id del input.
 
¿Por qué es útil?

 . Si haces clic en el texto del label, automáticamente el input asociado se 
   activa. 

 . Mejora la accesibilidad para  personas que usan lectores de pantalla.


.................................................................................

¿Qué es <input>?

. Es una etiqueta de formulario que sirve para que el usuario ingrese o 
  selecicione datos.

. Es autocontenida (no tiene etiqueta de cierre).

. Necesita atributos para saber de qué tipo es (texto, correo, contraseña, etc.).



Ejemplo básico:

<input type="text" name="usuario">


Atributo clave: type

El type define qué tipo de dato se ingresa.
Estos son los más usados (te los divido por categorías):


Uno: Entrada de texto:

 - type="text" -> Texto normal.
 - type="password" -> Texto oculto (contraseñas).
 - type="email" -> Valida que sea un correo.
 - type="url" -> Valida que sea una URL.
 - type="number" -> Solo números.
 - type="tel" -> Teléfonos.
 - type="search" -> Cuadro de búsqueda.
 - type="date" -> Seleccionar fecha.
 - type="time" -> Seleccionar hora.
 - type="datetime-local" -> Fecha y hora.
 - type="month" -> Mes y año.
 - type="week" -> Semana del año.

Dos: Selección:

 - type="radio" -> Botón de opción (solo uno se puede elegir dentro del mismo 
   grupo)

 - type="checkbox" -> Casillas de verificación (puedes elegir varias).

 - type="color" -> Selector de color.

 Tres: Subir archivos:

 - type="file" -> para subir archivos.

 Cuatro: Botones:

 - type="submit" -> Botón para enviar el formulario.
 - type="reset" -> Botón para borrar todo lo escrito.
 - type="button" -> Botón sin función (puedes darle funciones con JavaScript).


Atributos importantes de <input>

Estos son los que más usarás:

 - name -> Nombre del campo (clave con la que el servidor recibirá el valor).
 - value -> Valor inicial del campo (o valor que se envía).
 - placeholder -> Texto de ayuda que aparece dentro del campo.
 - required -> Hace que el campo sea obligatorio.
 - readonly -> Solo lectura (no se puede modificar).
 - disabled -> Deshabilita el campo.
 - min y max -> Valores mínimos y máximos (para number, date, etc.).
 - maxlength -> Número máximo de caracteres.
 - checked -> Para marcar por defecto un radio o checkbox.
 - multiple -> permite seleccionar varios archivos o correos.
 - step -> Define los intervalos (ejemplo: en un number saltar de 5 en 5).


¿Cómo se envían los datos?

Cuando el usuario escribe algo en el <input>, al presionar el botón "submit", 
el navegador manda el valor del name y lo que el usuario escribió al archivo definido en el action del <form>.

Ejemplo:

  <input type="text" name="usuario" value="Jose">

Si el usuario cambia "Jose" por "Pedro" y presiona enviar, el servidor recibirá:

  usuraio=Pedro


¿Cómo se ve en conjunto?

Un formulario básico con <input>:

    <form action="procesar.php" method="POST">
      <input type="text" name="usuario" placeholder="Jose Angel">
      <input type="password" name="clave"
      placeholder="jOsEbErMeO10695324482057fkjfgd">
    </form>



"action"

¿Qué es action en HTML?

Es un atributo del <form> que le dice al navegador a dónde enviar los datos del formulario una vez que el usuario presione "submit".

¿Qué significa "enviar los datos"?

Cuando alguien llena un formulario (nombre, correo, etc.) y hace clic en "Enviar", el navegador manda esa información a una dirección web (URL). Esa dirección se escribe dentro del atributo action.


Ejemplo básico

  <form action="procesar.php" method="POST">
    <input type="text" name="nombre" />
    <input type="submit" value="Enviar" />
  </form>

- Cuando el usuario escriba su nombre y haga clic en "Enviar", el navegador mandará esa información al archivo procesar.php (en el mismo servidor).

- La información se enviará como: nombre=Jose


¿Qué puedo poner dentro de action?

Puedes poner:

---------------------------------------------------------------------------------
Uno: Nombre de un archivo

    <form action="guardar.php">

Se enviará al archivo guardar.php (ubicado en la misma carpeta).
---------------------------------------------------------------------------------
Dos: Ruta con subcarpetas

   <form action="formularios/respuesta.php">

Se envía a respuesta.php dentro de la carpeta formularios.
---------------------------------------------------------------------------------
Tres: URL externa completa

    <form action="https://ejemplo.com/recibir.php">

Se envía a otro sitio web. Esto solo funciona si el sitio externo acepta recibir formularios, como APIs.
---------------------------------------------------------------------------------
Cuatro: Ruta relativa o absoluta

- action="datos.php" -> Ruta relativa (misma carpeta).
- action="/usuarios/datos.php" -> Ruta absoluta (desde raíz del sitio).


¿Y qué pasa si uso mal el action?

- Si escribes mal la ruta, el navegador intentará enviarlo pero fallará (Error 
  404).
- Si la página a la que se envía no está lista para recibir datos (por ejemplo, si no hay PHP o backend), los datos se pierden.


¿Y cómo se relaciona con method?

- action -> dice a dónde se envían los datos.
- method -> dice cómo se envían (GET o POST).

Ejemplo:

    <form action="guardar.php" method="POST">

-> Manda los datos a guardar.php usando el método POST.

.................................................................................

¿Qué es <label> en HTML?

La etiqueta <label> se usa para etiquetar o nombrar un campo de un formulario, normalmente un <input>, <textarea> o <select>. Su función principal es indicar al usuario qué dato debe introducir.

.................................................................................

¿Para qué sirve?

- Mejorar la accesibilidad: Ayuda a los lectores de pantalla a decirle al 
  usuario qué debe escribir.
- Mayor usabilidad: Si haces clic en el <label>, el cursor se mueve directamente 
  al campo relacionado. Esto solo pasa si está correctamente asociado con el input.
- Organiza visualmente los formularios: Deja claro qué corresponde a cada campo.

.................................................................................

¿Cómo se usa?

Hay dos formas de asociar un <label> a un <input>:

. Uno: Por atributo for (más común)

    <label for="email">Correo electrónico:</label>
    <input type="email" id="email" name="email"/>

- El atributo for="email" apunta al id="email" del input.
- Si haces clic en el texto "Correo electrónico", el cursos se  mueve al input.
---------------------------------------------------------------------------------
. Dos: Encapsulando el input dentro del <label>

    <label>Correo electrónico:
     <input type="email" name="email" />
    </label>

- En este caso, no se necesita for ni id.
- El clic también funcionará igual porque el campo está dentro del <label>.

.................................................................................

¿Qué atributos puede tener <label>?

---------------------------------------------------------------------------------
for                              Asocia el label con un input q que tenga ese id.
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Nota: <label> no tiene atributos de estilo por defecto, pero puedes usar class, style o id como en cualquier etiqueta HTML.
---------------------------------------------------------------------------------

Ejemplo completo:

<form>
  <label for="nombre">Nombre:</label"
  <input type="text" id="nombre" name="nombre" />

  <br><br>

  <label for="edad">Edad:</label>
  <input type="number" id="edad" name="edad" />
</form>

- Aquí, cada <label> está conectado con su campo correspondiente. 
- Esto hace que sea claro y accesible.

.................................................................................

¿Qué pasa si no usas <label>?

- El formulario puede ser confuso para el usuario.
- Las personas con discapacidad visual no podrán usar lectores de pantalla  
  correctamente.
- La usabilidad del sitio se reduce.

.................................................................................

¿Qué es <textarea>?

La etiqueta <textarea> sirve para crear un campo de texto de varias líneas dentro de un formulario. Es ideal para cosas como:

      . Comentarios.
      . opiniones o reseñas.
      . Mensajes largos.
      . Descripciones.

A diferencia del <input type="text">, que es para una sola línea, <textarea> permite escribir texto más extenso, como un pequeño cuadro de notas.

Sintaxis básica

   <textarea name="mensaje" id="mensaje" rows="5" cols="30">
   Escribe aquí tu mensaje...
   </textarea>

.................................................................................

Explicación de los atributos más comunes:

Atributo                              ¿Para qué sirve?
---------------------------------------------------------------------------------
name                                  Nombre del campo (clave que se envía al 
                                      sevidor). Obligatorio si se envía el formulario.
---------------------------------------------------------------------------------
id                                    Identificador único para asociar con un 
                                      <label>
---------------------------------------------------------------------------------
rows                                  Número de filas visibles (alto del cuadro).
---------------------------------------------------------------------------------
cols                                  Número de columnas visibles (ancho del 
                                      cuadro).
---------------------------------------------------------------------------------
placeholder                           Texto gris que aparece como sugerencia 
                                      dentro del área.
---------------------------------------------------------------------------------
maxlength                             Límite de caracteres que el usuario puede 
                                      escribir.
---------------------------------------------------------------------------------
readonly                              Solo lectura (no permite escribir).
---------------------------------------------------------------------------------
disabled                              Desactiva el campo (gris y no editable).
---------------------------------------------------------------------------------
required                              Campo obligatorio para enviar el 
                                      formulario.

.................................................................................

Ejemplo con <label>

<form>
  <label for="comentario">Comentario:</label><br>
  <textarea name="comentario" id="comentario" rows="4" cols="40" placeholder="Escribe tu opinión aquí..." required></textarea>
</form>

.................................................................................

Cosas útiles que puedes hacer con <textarea>:

- Uno: Limitar caracteres

  <textarea maxlength="200"></textarea>

- Dos: Texto predeterminado dentro:

  <textarea>Este texto ya está escrito.</textarea>

- Tes: Evitar que se edite
  
  <textarea readonly>Solo lectura</textarea>

- Cuatro: Desactivar el campo

  <textarea disabled>Desactivado</textarea>


.................................................................................

Importante

- El contenido de <textarea> va entre la etiqueta de apertura y cierre, no dentro de un atributo como en <input>.

- El navegador puede permitir agrandar el área (con el mouse en la esquina), aunque puedes evitarlo con CSS si quieres.

.................................................................................

¿Qué es <select>?

La etiqueta <select> se usa en formularios para crear un menú desplegable. Dentro de este menú, el usuario puede seleccionar una opción (o más, si lo configuras así).

Se usa junto con la etiqueta <option> que define cada una de las opciones dentro del menú.

Estructura básica:

  <select name="pais" id="pais">
    <option value="co">Colombia</option>
    <option value="mx">México</option>
    <option value="ar">Argentina</option>
  </select>

.................................................................................
                        ----------------------------
                       + Explicación de cada parte: +
                        ----------------------------

Etiqueta o atributo                                  ¿Para qué sirve?
---------------------------------------------------------------------------------
<select>                                              Crea el menú desplegable.
---------------------------------------------------------------------------------
name                                                  Nombre que se enviará al 
                                                      servidor. Es la clave del dato.
---------------------------------------------------------------------------------
id                                                    Identificador para asociar 
                                                      con <label>.
---------------------------------------------------------------------------------
<option>                                              Cada opción visible que el 
                                                      Usuario puede elegir.
---------------------------------------------------------------------------------
value                                                 valor interno que se envía 
                                                      si  el usuario elige esa opción.
---------------------------------------------------------------------------------
selected                                              Marca una opción como 
                                                      seleccionada por defecto.
---------------------------------------------------------------------------------
disabled (en <option>)                                Desactiva esa opción  
                                                      especifica.
---------------------------------------------------------------------------------
disabled (en <select>)                                Desactiva todo el menú.
---------------------------------------------------------------------------------
required                                              hace que el usuario tenga 
                                                      que seleccionar algo.
---------------------------------------------------------------------------------
multiple                                              permite seleccionar varias 
                                                      opciones a la vez (usa Ctrl o Shift).

.................................................................................

Ejemplo completo:

<form>
  <label for="fruta">Elige tu fruta favorita:</label>
  <select name="fruta" id="fruta" required>
   <option value="">_Selecciona una opción_</option>
   <option value="manzana">Manzana</option>
   <option value="banano">Banano</option>
   <option value="pera">Pera</option>
   <option value="uva" selected>Uva</option>
  </select>
<form>

Detalles adiciones:

-SELECTED-

Selecciona una opción por defecto:

  <option value="uva" selected>Uva</option>

Opción desactivada:

  <option value="naranja" disabled>Naranja (no disponible)</option>

.................................................................................

Seleccón múltiple:

   <select name="lenguajes" id="lenguajes" multiple>
     <option value="html">HTML</option>
     <option value="css">CSS</option>
     <option value="js">JavaScript</option>
   </select>

.................................................................................

---------------------------------------------------------------------------------
Importante: Si usas multiple, el atributo name debe terminar en [] para enviar varios valore:
   .....................................
  { <select name="lenguajes[]" multiple> }
   .....................................

---------------------------------------------------------------------------------


.................................................................................

Diferencia entre <select> y <input type="text">:

Característica                    <input type="text">                  <select>

Escribes libremente                      [I]                  Solo eliges [X]

Menú desplegable                         [X]                              [I]

Opciones fijas                           [X]                              [I]

Se usa para respuestas cortas            [I]                              [I]

.................................................................................

¿Qué es target?

target es un atributo HTML que se usa principalmente en enlaces (<a>) y formularios (<form>), y define dónde se va a abrir la página o el recurso al que se está accediendo.

¿Dónde se usa?

Principalmente en:

 - <a> -> para enlaces.
 - <form> -> Para definir dónde se mostrará la respuesta al enviar el formulario.
 - <base> -> Para establecer un target por defecto para todos los enlaces del  
             documento.

Valores más comunes de target:

valor                                            ¿Qué hace?
---------------------------------------------------------------------------------
_self                         (Por defecto) Abre el enlace en la misma pestaña/
                               ventana.
---------------------------------------------------------------------------------
_blank                         Abre el enlace en una nueva pestaña o 
                               ventana.
---------------------------------------------------------------------------------
_parent                        Abre el enlace en el marco padre (cuando se usan  
                               <iframe> o <frameset>).
---------------------------------------------------------------------------------
_top                           Abre el enlace en la ventana completa, saliendo 
                               de cualquier <frame> o <iframe>.
---------------------------------------------------------------------------------
nombre                         Abre el enlace en un marco (frame) o ventana con 
                               ese nombre (útil con <iframe> o pop-ups).

.................................................................................

Ejemplos prácticos:

*********************************************************************************
Uno: target="_blank" -> nueva pestaña

     <a href="https://www.google.com" target="_black>Abrir Google en otra pestaña</a>
*********************************************************************************
Dos: target="_self" -> misma pestaña (valor por defecto)

   <a href="contacto.html" target="_self">Ir a Contacto</a>
*********************************************************************************
Tres: target="_top" -> rompe iframes

Si estás dentro de un <iframe>, este valor hace que el enlace se abra en toda la ventana, saliendo del marco.

   <a href="inicio.html" target=_top">Salir del iframe</a>
*********************************************************************************
Cuatro: target="miMarco" -> abrir en un <iframe>

Supón que tienes un iframe con nombre "miMarco":

    <iframe name="miMarco" width="500" heigth="300"></iframe>
    <a href="info.html" target="miMarco">Mostrar en el iframe</a>

Cuando haces clic, info.html se carga dentro del iframe, no en toda la página.
*********************************************************************************
Cinco: En formularios:

      <form action="procesar.html" method="post" target="_black">
        <input type="text" name="nombre" />
        <button type="submit">Enviar</button>
      </form>
*********************************************************************************

Precaución de seguridad con _blank

Cuando usas target="_blank", es recomendable proteger tu página con esto:

     <a href="https://otro-sitio.com" target="_blank" rel="noopener noreferrer">Enlace seguro</a>

Esto evita que el otro sitio tenga acceso a tu página medianto window.opener (previene ataques como tabnabbing). 


.................................................................................

¿Qué es autocomplete?

"autocomplete" es un atributo global que se usa principalmente en formularios (<form>) y campos de entrada (<input>, <textarea>, <select>), y le dice al navegador si debe o no sugerir valores automáticamente, como nombre, correos, contraseñas, direcciones, etc.

¿Para qué sirve?

Sirve para ayudar al usuario a completar más rápido un formulario reutilizando datos que ya ha introducido antes. Ejemplo típico: cuando escribes tu nombre o correo y el navegador ya lo completa por ti.

Dónde se puede usar:

- En <form> -> para activar/desactivar el autocompletado de todo el formulario.

- En <input>, <textarea> y <select> -> para  controlar el autocompletado campo 
  por campo.


Valores posibles de autocomplete

Valor                                               Significado
 
"on"                                          Activa el autocompletado.       

"off"                                        Desactiva el autocompletado.

Otros valores especiales              Como name, email, password, street-address

.................................................................................


Ejemplos prácticos


Uno: Activar autocompletado (por defecto)

   <form action="guardar.php" autocomplete="on">
    <label for="nombre">Nombre:</label>
    <input type="text" name="nombre" id="nombre" />
   </form>

Si el usuario ya ha escrito antes su nombre, el navegador lo sugerirá.
---------------------------------------------------------------------------------
Dos: Desactivar autocompletado

      <form action="guardar.php" autocomplete="off">
       <label for="correo">Correo electrónico:</label>
       <input type="email" name="correo" id="correo" />
      </form>

El navegador no sugerirá nada automáticamente. Útil para datos confidenciales (como contraseñas o tarjetas).
---------------------------------------------------------------------------------

Tres: Autocompletado específico por campo

Puedes usar autocomplete en campos individuales con  valores específicos:

  <form action="procesar.php">
   <label for="email">Email:</label>
   <input type="email" name="email" id="email" autocomplete="email" />

   <label for="clave">Contraseña:</label>
   <input type="password" name="clave" id="clave" autocomplete="current-password" />
  </form>

Esto ayuda al navegador a entender qué tipo de información se está solicitando.
.................................................................................
                       Lista de valores específicos comunes

Valor                                                Campo esperado 

name                                                nombre completo

email                                               Correo electronico

username                                            Nombre de usuario

new-password                                        Nueva contraseña

current-password                                    Contraseña actual

tel                                                 Número de teléfono

street-address                                      Dirección

postal-code                                         código postal

country-name                                        País

cc-number                                           Número de tarjeta de crédito


Y muchos más. Se usa especialmente en formularios más complejos (como compras, registros, etc.).
.................................................................................


Buenas prácticas 

- Usa autocomplete="off" en campos sensibles (contraseñas, pagos, tokens).
- Usa autocomplete="on" para campos comunes que el usuario rellena muchas vaces, 
  como nombre, correo, dirección.
- Cuando creas formularios para usuarios registrados, el autocompletado puede 
  mejorar la experiencia de usuario.

.................................................................................  
¿Qué es novalidate?

novalidate es un atributo booleano que se aplica al elemento <form> en HTML.

Su función es desactivar la validación automática del navagador cuando se envía un formulario.

*********************************************************************************

¿Para qué sirve?

Por defecto, HTML5 valida ciertos campos automáticamente al presionar el botón "Enviar". Por ejemplo:

    - Verifica si un campo "email" contiene un correo válido.
    - Verifica si un campo "required" fue completado.
    - Verifica si un campo "number" contiene un número.

Pero si usas el atributo "novalidate", el navegador no realizará ninguna validación, incluso si los campos tienen restricciones (required, type, pattern, etc.). 

*********************************************************************************

¿Cómo se usa?

En el formulario

  <form action="procesar.php" novalidate>
   <label for="correo">Correo electrónico:</label>
   <input type="email" id="correo" name="correo" required/>

   <button type="submit">Enviar</button>
  </form>

En este caso, aunque el campo de correo es de tipo email y tiene required, el navegador permitirá el envío aunque esté vacío o mal escrito.

*********************************************************************************

¿Cuándo usar novalidate?

+- Cuando vas a validar el formulario con JavaScript personalizado y no quieres 
+  que el navegador interbenga.
+
+- Cuando estás haciendo pruebas.
+
+- En formularios que no requieren validación estricta.

*********************************************************************************

¿Cuándo NO usarlo?

 - Si quieres aprovechar la validación automática del navegador.
 - Si tu formulario es simple y no necesitas validación avanzada.

 ********************************************************************************

Detalles importantes

 - Solo se usa en <form>, no en los campos individuales.
 - No tiene valor: se escribe solo novalidate, no novalidate="true" ni  
   novalidate="false".
 - Si lo agregas, el navegador ignora todas las restricciones HTML5 de los 
   campos.

.................................................................................

¿Qué es accept-charset?

accept-charset es un atributo del elemento <form>  que defíne qué codificaciones de caracteres acepta el servidor cuando se envía el formulario.

dicho de forma sencilla:

  Indica cómo deben codificarse los caracteres (como letras con tildes, ñ, símbolos especiales, etc.) al enviar el formulario al servidor.

¿Qué es una codificación de caracteres?

Una codificación de caracteres (charset) es la forma en que el navegador traduce letras, números y símbolos en bytes para poder enviarlos o guardarlos.

Por ejemplo:

 - UTF-8 es la codificación más común hoy en día.
 - ISO-8859-1 era muy usada en Europa occidental antes.
 - Otras incluyen: UTF-16,  windows-1252, etc.

.................................................................................

¿Para qué sirve accept-charset?

Sirve para asegurar que los datos enviados en el formulario (especialmente texto) se entiendan correctamente cuando llegan al servidor.

Esto es muy importante si:

 - Tus usuarios escriben en idiomas con acentos (como el español).
 - Tienes caracteres especiales: emojis, ñ,  ü, ç, etc.
 - El servidor requiere una codificación específica.

.................................................................................

Sintaxis

 <form accept-charset="UFT-8" action="procesar.php" method="post">

También puedes especificar más de una codificación separada por espacios:

 <form accept-charset="UTF-8 ISO-8859-1">

En ese caso, el navegador intentará usar la primera y, si no puede, intentará las siguientes.

Ejemplo práctico

  <form action="procesar.php" method="post" accept-charset="UTF-8">
    <label for="mensaje">Mensaje:</label>
    <textarea name="mensaje" id="mensaje" rows="4" cols="30"></textarea>
    <button type="submit">Enviar</button>
  </form>

Si el usuario escribe:

"!Hola, José! ¿Cómo estás? 😊"
El navegador usará la codificación UTF-8 para que las tildes y el emoji se envíen correctamente al servidor.

.................................................................................


⚠️ Si no usas accept-charset...

El navegador usará por defecto la misma codificación que tiene la página HTML, usualmente:

  <meta charset="UTF-8" />

Por eso, si tu HTML ya tiene UTF-8, muschas veces no necesitas poner accept-charset.

.................................................................................

Cuándo usarlo

- Cuando quieres asegurarte de que los datos se envíen en una codificación 
  concreta (por compatibilidad con un servidor viejo, por ejemplo).
- Cuando estás trabajando con formularios internacionales o de varios idiomas.
- Cuando sabes que el servidor no puede interpretar bien ciertos caracteres si 
  no se usan ciertos charsets.

.................................................................................

X Cuándo NO usarlo

- Si ya estás usando <meta charset="UTF-8"> y el servidor está preparado para 
  UTF-8, muchas veces no hace falta.
-Si no sabes qué charset usa el servidor, es mejor consultar antes de forzarlo.

.................................................................................

🔐 Relación con seguridad

Usar una codificación incorrecta puede hacer que los datos lleguen mal, se interpreten mal o, en casos extremos, causar problemas de seguridad (inyección de caracteres).

Por eso, lo mejor es usar UTF-8, que es seguro, estándar y ampliamente soportado.

.................................................................................


Comparación rápida 

Codificación              Caracteres soportados          Uso común

UTF-8                     Todos (universal)              Web moderna, emojis, 
                                                         multilenguaje

ISO-8859-1                Europa occidental              Sitios antiguos en 
                                                         español

UTF-16                    Todos, pero más pesado         Algunos documentos y  
                                                         programas


.................................................................................

Buenas prácticas

 - Siempre usa UTF-8, a menos que tengas una razón técnica muy específica.
 - Asegúrate de que tu servidor interprete la codificación correctamente.
 - Si haces páginas en español, UTF-8 evitará errores con acentos o la ñ.


.................................................................................

¿Qué es rel?

El atributo rel significa "relación" (rel viene de relationship) y define la relación entre el documento actual y el recurso al que se enlaza.

Se usa principalmente para decir:

  "¿Qué tipo de relación tiene este enlace orecurso con  la página actual?"

.................................................................................

¿Dónde se usa rel?

Principalmente en dos etiquetas HTML:

- <a> - Enlaces normales.
- <link> - Enlaces dentro del <header> para archivos externos.

.................................................................................

Uso de rel en <a>


<a href="https://ejemplo.com" rel="nofollow">Ir al sitio</a>

Con <a>, rel describe la relación con la URL que estamos enlazando. Es útil para buscadores, seguridad y control del comportamiento del enlace.

 
Valores comunes en <a>:

valor "rel"            ¿Qué significa?                      ¿Para qué sirve?

nofollow            No segur el enlace (SEO)             Google no sigue el link 
                                                         ni lo indexa

noopener            No permite acceso al objeto          Mejora seguridad al 
                    window.opener                        abrir en nueva pestaña

noreferrer          No envía información de referencia   Protege privacidad

external            Es un enlace externo                 Solo informativo, sin 
                                                         efecto real

ugc                 Contenido generado por el usuario    Comentarios, foros. 
                                                          Útil en SEO
 
sponsored           Enlace pagado o patrocinado          Google lo usa para 
                                                         identificar publicidad


Importante: Para seguridad, cuando uses target="_blank", también deberías usar rel="noopener noreferrer" par evitar ataques.

.................................................................................


Uso de rel en <link>

  <link rel="skylesheet" href="estilos.css">

Con <link>, rel define el tipo de recurso que estás vinculando (como una hoja de estilo, íconos, etc.)

Valores comunes en <link>:


Valor rel           ¿Qué significa?                        ¿Para qué sirve?
 
stylesheet          Hoja de estilos                      Para vincular archivos 
                                                         CSS.

icon                ícono del sitio                      Favicon del navegador.

manifest            Web App manifest                     Aplicaciones web 
                                                         progresivas.

alternate           Alternativa del documento            Para RSS, versiones en 
                                                         otro idioma, etc.

preload             Precargar recursos                   Mejora el rendimiento.

canonical           Página conónica                      SEO: evita contenido 
                                                         duplicado.

.................................................................................


Buenas prácticas


- Usa rel="noopener noreferrer" con target="_blank" para seguridad.
- Usa rel="nofollow" si no quieres pasar autoridad SEO a un enlace externo.
- Usa rel="stylesheet" correctamente en tu <link> de CSS.
- Sé claro en la intención del enlace; esto mejora accesibilidad y SEO.+

.................................................................................


                                <fieldset>

¿Qué es <fielset>?

Es una etiqueta de formulario en HTML que sirve pera agrupar visualmente y de manera estructurada varios controles de formulario (como <input>, <label>, <select>, etc.).

  El navegador dibuja un recuadro alrededor del grupo, y este grupo puede tener un título si usas junto a él la etiqueta <legend> (que se explica luego).

¿Para qué sirve <fieldset>?

 - Agrupa campos relacionados entre sí.
 - Mejora la accesibilidad y la organización visual de los formularios.
 - Es ideal para formularios largos que se dividen por secciones (por ejemplo, "Datos personales", "Dirección", "preferencias").

 Estructura básica

   <fieldset>
    <legend>Información personal</legend>
    

    <label for="nombre">Nombre:</label>
    <input type="text" id="nombre" name="nombre" />

    <label for="correo">Correo:</label>
    <input type="email" id="correo" name="correo" />
  </fieldset>

Detalles importantes 

 - Puedes tener varios <fieldset> dentro de un solo <form>.
 - Ayuda a que el usuario entienda que ciertos campos están relacionados entre 
   sí.
 - Se puede usar con CSS para personalizar su estilo.

 ¿Qué puede ir dentro de <fieldset>?

 Dentro de un <fieldset> pueden ir todo estos elementos:

 Uno: <legend>

   Describe el contenido del fieldset. siempre debe ir como el primer hijo del <fieldset>

 Dos: <label>

  Se usa para etiquetar los controles como <input>, <textarea>, <select>, etc.
  

 Tres: <input>
   Cualquier tipo: texto, radio , checkbox, email, etc.


 Cuatro: <select> y <option>, <optgroup>
   Para listas desplegables.

 Cinco: <textarea>
   Para escribir texto largo.

 Seis: <button>
   Botones  de enviar, resetear o personalizados.

 Siete: <datalist>
   Para opciones sugeridas en un <input>.

 Ocho: <output>
   Para mostrar resultados calculados O generados por el formulario.

 Nueve: <fieldset> anidados
   Puedes tener fieldsets dentro de otros fieldsets para organizar aún mejor.

 Dies: Otros elementos HTML
   Como <p>, <div>, <span>, etc., si quieres mejorar el estilo o la estructura del formulario.


Ejemplo general: 

    <fieldset>
      <legend>Información personal</legend>

      <label for="nombre">Nombre:</label>
      <input type="text" id="nombre" name="nombre">

      <label for="email">Correo:</label>
      <input type="email" id="email" name="email">

      <label for="pais">País:</label>
      <select id="pais" name="pais">
          <option value="co">Colombia</option>
          <option value="mx">México</option>
      </select>

      <button type="submit">Enviar</button>
    </fieldset>


.................................................................................

                               <legend>

¿Qué es la etiqueta <legend>?

La etiqueta <legend> sirve para poner un título o descripción  al grupo de campos que se encuentra dentro de un <fieldset>.

     Es decir: Si <fieldset> agrupa, <legend> le pone nombre a ese grupo.

Características clave de <legend>

característica               Detalle

 Se usa con                   <fieldset>

 Posición                      Siempre debe ir como primer hijo de <fieldset>

 Función                       Describe el propósito del grupo de campos

 Accesibilidad                 Mejora la comprensión del formulario para 
                               usuarios con lectores de pantalla

 
Estructura básica


<fieldset>
   <legend>Datos del usuario</legend>
   <!-- Aquí van los inputs, labels, etc. -->
</fieldset>


¿Por qué es importante?

Uno: 
      Organización visual: El navegador normalmente muestra <legend> como un  
                           texto en la parte superior del borde del <fieldset>.

Dos: 
      Accesibilidad: Ayuda a que los lectores de pantalla entiendan mejor la 
                     estructura del formulario.

Tres:
       Claridad para el usuario: Hace que el formulario sea más claro, 
                                 especialmente cuando tiene muchos campos.


Buenas prácticas 

- Úsalo siempre que uses <fieldset>

- Haz que el texto sea breve y descriptivo
  Ej: "información de contacto", "preferencias", "Método de pago"

- Mantén solo una etiqueta <legend> por cada <fieldset>


.................................................................................

                               <optgroup>
                               

¿Qué es <optgroup>?

La etiqueta <optgroup> se usa dentro de un <select> para agrupar opciones relacionadas . Sirve para organizar las opciones en categorías, haciendo que el menú sea más claro para el usuario.

¿Dónde se usa?

Se usa dentro de <select> y contiene múltiples etiquetas <option>.
No se puede usar fuera de <select>, ni puede contener otras cosas que no sean <option>.


🔎-¿Cómo funciona?-🔍

Estructura general:


  <select>
   <optgroup label="Grupo 1">
    <option>Opción A</option>
    <option>Opción B</option>
   </optgroup>
  

   <optgroup label="Grupo 2">
    <option>Opción A</option>
    <option>Opción B</option>
   </optgroup>
  </select>


Resultado visual:

   Grupo 1 
      - Opción A 
      - Opción B 
   Grupo 2
      - Opción C 
      - opción D


Atributos de <optgroup>

Atributo                                      Descripción

label                        Nombre del grupo que se mostrará como encavazado

disabled                     Si se añade, el grupo y sus opciones  estarán 
                             desactivadas 


Ejemplo con disabled:

  <optgroup label="No disponible" disabled>
    <option>Opción x</option>
    <option>opción y</option>
  </optgroup>

.................................................................................
 
                                   <button>

¿Qué es la etiqueta <button>?

La etiqueta <button> se usa para crear botones interactivos en una página web. Estos botones pueden servir para:

     - Enviar un formulario 
     - Reiniciar (resetear) un formulario 
     - Ejecutar acciones personalizadas con JavaScript 
     - Botones que no hacen nada derectamente  (pero que pueden usarse para 
       diseño)


Sintaxis básica:

<button> Texto del botón</button>


Tipos de botón

La etiqueta <button> tiene un atributo importante: type

atributo type                              ¿Qué hace?

submit                                     Envia el formulario.Es el valor por 
                                           defecto. 

reset                                      Reinicia todos los campos del 
                                           formulario

button                                     No hace nada por sí solo (se usa con 
                                           JavaScript o diseño)



Ejemplos:
 
  <!-- Enviar el formulario -->
  <button type="submit">Enviar</button>

  <!-- Reiniciar el formulario -->
  <button type="reset">Limpiar</button>

  <!-- Botón sin acción (por ahora) -->
  <button type="button">Haz clic</button>


Ventajas de <button> sobre <input type="submit">

 - Puedes colocar texto, iconos, etiquetas HTML (como <strong>, <img>, etc.) 
   dentro de <button>.
 - Tienes más control visual y semántico.

.................................................................................


                                            <datalist>



  ¿Qué es <datalist>?

  <datalist> es una etiqueta en HTML que se usa para proporcionar una lista de opciones predefinidas a un campo de entrada <input>. Es muy útil cuando quieres que el usuario pueda escribir libremente, pero también ofrecerle sugerencias automáticas mientras escribe.


¿Cómo funciona?

 - Se utiliza junto con un <input>.
 - El <input> debe tener un atributo list que apunte al id del <datalist>.
 - El <datalist> contiene etiquetas <option> con los valores sugeridos.



Estructura básica.


<form>
  <label for="ciudad">Ciudad:</label>
  <input type="text" id="ciudad" name="ciudad" list="ciudades">

  <datalist id="ciudades">
    <option value="Bogotá">
    <option value="Medellín">
    <option value="Cali">
    <option value="Barranquilla">
  </datalist>
</form>



Ventajas

 - Mejora la experiencia del usuario.
 - No limita la entrada como un <select> (es más libre).
 - Muy útil para autocompletar.


Detalles técnicos

 . El <option> solo necesita el atributo value, no necesita label ni contenido entre etiquetas (aunque se puede poner).



 Ejemplo alternativo:


<option value="cartagena">Cartagena</option>


Pero este ejemplo es equivalente a:

<option value="cartagena">


 - No puedes usarlo con todos los type de <input>.
   Funciona principalmente con:

    . text
    . search
    . email
    . URL
    . tel
    . number (en lagunos navegadores)


..........................................................................................................


                                                <output>


¿Qué es <output>?

La etiqueta <output> se usa para mostrar un resultado calculado dentro de un formulario.

Aunque es más útil cuando se combina con JavaScript, en HTML puro todavía puedes usarla como un campo visual de salida, por ejemplo, para mostrar resultados de cálculos simples realizados por el navegador (como con <input type="range"> o formularios con atributos como oninput).



Estructura básica 

<form oninput="resultado.value = parseInt(a.value) + parseInt(b.value)">
  <input type="number" id="a" name="a" value="0">
  +
  <input type="number" id="b" name="b" value="0">
  =
  <output name="resultado" for="a b" ></output>
</form>

¿Qué hace esto?

 - Los campos <input> tienen id y valores numéricos.
 - El atributo oninput actualiza automáticamente el contenido de <output>.
 - <output> muestra el resultado de la suma de los dos números.


 Atributos importantes de <output>

 Atributo                                                  ¿Para qué sirve?

 name                              Sirve para identificar el valor del <output> si se envía el formulario.

 for                               Inidica qué elmentos <input> están relacionados con el cálculo del 
                                   resultado. (opcional, solo informativo)

 id                                Si necesitas manipular el <output> con JavaScript. No es obligatorio 
                                   en HTML puro.




Casos de uso posibles (sin JavaScript)

Aunque <output> se pensó para usarse con JavaScript, algunas cosas puedes hacer solo con HTML, como:

   . Mostrar resultados automáticos con oninput
   . Mostrar texto estático como resultado de una acción
   . Usarlo como marcador de lugar para futuras salidas

..........................................................................................................

HTML input types

<input type="button">
<input type="checkbox">
<input type="color">
<input type="date">
<input type="datetime-local">
<input type="email">
<input type="file">
<input type="hidden">
<input type="image">
<input type="month">
<input type="number">
<input type="password">
<input type="radio">
<input type="range">
<input type="reset">
<input type="search">
<input type="submit">
<input type="tel">
<input type="text">
<input type="time">
<input type="url">
<input type="week">

----------------------------------------------------------------------------------------------------------


















